/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import ListPlay.IOFile;
import jaco.mp3.player.MP3Player;
import java.awt.Desktop;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Base64.Encoder;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.NoPlayerException;
import javax.media.Player;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.Line;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.Mixer;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author Nguyen Hong Anh
 */
public class PlayerFrame extends javax.swing.JFrame {

    /**
     * Creates new form PlayerFrame
     */
    MP3Player player;
    File songFile;
    String currentDirectory="C://Users//Nguyen Hong Anh//OneDrive//Desktop//App Mp3//Music";
    String appName = "                                                                                                Music Player                                     ";
    int song=0;
    Encoder e;
    List<String> ListPlay;
   // int m=0;
    boolean repeat = false;
    MP3Player playerRepeat;
    boolean windowCollapsed = false;
    private Running t;
   
    int xMouse, yMouse;
    private Object AudioFileIO;
    public PlayerFrame() {
        initComponents();
        t=new Running();
        t.start();        
        ListPlay= new ArrayList();
        Name.setText(appName);
        songFile = new File("");
        
        //songNameDisplay.setText(fileName);
        playerRepeat= new MP3Player(songFile);
        player = new MP3Player(songFile);
        File f = new File("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\App Mp3\\AppMp3\\src\\ListPlay\\ListPlay.txt");
        if (f.exists()) {
            ListPlay = IOFile.doc("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\App Mp3\\AppMp3\\src\\ListPlay\\ListPlay.txt");
            for (String i: ListPlay) {
                this.PlayList.addItem(i);
            }
        } 
        else {
            ListPlay= new ArrayList();
        }
        int vol=50;
        volumeControl((double)vol/100f);
      /*  for(int i=0;i<s.length;i++)
        {
            PlayList.addItem(s[i]);
        }*/
      
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Name = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        PlayList = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        Repeat = new javax.swing.JLabel();
        Stop = new javax.swing.JLabel();
        ForWard = new javax.swing.JLabel();
        Play = new javax.swing.JLabel();
        BackWard = new javax.swing.JLabel();
        Add = new javax.swing.JLabel();
        Vol = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        delete = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 204));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        Name.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Name.setFocusable(false);
        Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NameMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\Video\\Up2T Image.gif")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        PlayList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PlayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PlayList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PlayList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        Repeat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Repeat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/No Repeat.png"))); // NOI18N
        Repeat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RepeatMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RepeatMousePressed(evt);
            }
        });

        Stop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Stop.png"))); // NOI18N
        Stop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                StopMouseDragged(evt);
            }
        });
        Stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StopMouseClicked(evt);
            }
        });

        ForWard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ForWard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/trai.png"))); // NOI18N
        ForWard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ForWardMouseClicked(evt);
            }
        });

        Play.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Play.png"))); // NOI18N
        Play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PlayMouseClicked(evt);
            }
        });

        BackWard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BackWard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/phai.png"))); // NOI18N
        BackWard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackWardMouseClicked(evt);
            }
        });

        Add.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/add.png"))); // NOI18N
        Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddMouseClicked(evt);
            }
        });

        Vol.setBackground(new java.awt.Color(255, 255, 255));
        Vol.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                VolStateChanged(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Max vol.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        delete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/delete.png"))); // NOI18N
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Repeat, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ForWard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Play, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BackWard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Vol, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BackWard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Play, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(ForWard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Stop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Repeat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(Vol, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    boolean check=false;
    private void PlayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlayMouseClicked
        // TODO add your handling code here:
        if(PlayList.getItemCount()==0)
        {
            JOptionPane.showMessageDialog(this, "Vui lòng thêm bài hát vào danh sách phát !!!");
            
        }
        else
        {
             
        if(check==false)
        {
            player.play();
            Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Pause.png")));
            String h= songFile.getName();
            System.out.println(h);
            check=true;
            jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\Video\\Up2T Video.gif"));
            
        }
        else
        {check=false;
            player.pause();
            Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Play.png")));
            jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\Video\\Up2T Image.gif"));
        }
        }
    }//GEN-LAST:event_PlayMouseClicked

    private void AddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMouseClicked
        // TODO add your handling code here:
        JFileChooser openFileChooser = new JFileChooser(currentDirectory);
        
        openFileChooser.setFileFilter(new FileTypeFilter(".mp3", "OPEN FILE MP3"));
        int result = openFileChooser.showOpenDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            songFile = openFileChooser.getSelectedFile();
            int kt = 0;
           for(int i=0;i<PlayList.getItemCount();i++){
                if(PlayList.getItemAt(i).equals(songFile.getName())){
                    kt=1;
                    JOptionPane.showMessageDialog(this, "Bài hát đã có rồi!");
                    break;
                }
            }
            if(kt==0){
                ListPlay.add(songFile.getName());               
               IOFile.viet("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\App Mp3\\AppMp3\\src\\ListPlay\\ListPlay.txt", ListPlay);
               PlayList.addItem(songFile.getName());
               JOptionPane.showMessageDialog(this, "Add thành công !!!");
            }
            
            
                   
            
          //  player.addToPlayList(songFile);
          //  player.skipForward();  
           // songNameDisplay.setText("" + songFile.getName()); 
        }
    }//GEN-LAST:event_AddMouseClicked

    private void RepeatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RepeatMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_RepeatMouseClicked

    private void StopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StopMouseClicked
        // TODO add your handling code here:
        player.stop();
        Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Play.png")));
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\Video\\Up2T Image.gif"));
        check=false;
    }//GEN-LAST:event_StopMouseClicked

    private void VolStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_VolStateChanged
        // TODO add your handling code here:
        volumeControl((double)Vol.getValue()/100f);
    }//GEN-LAST:event_VolStateChanged

    private void PlayListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayListActionPerformed
        // TODO add your handling code here:
        player.getPlayList().clear();
        songFile= new File("C://Users//Nguyen Hong Anh//OneDrive//Desktop//App Mp3//Music//"+PlayList.getSelectedItem());
        player.addToPlayList(new File("C://Users//Nguyen Hong Anh//OneDrive//Desktop//App Mp3//Music//"+PlayList.getSelectedItem()));
        player.skipForward();
        song=PlayList.getSelectedIndex();
        check=false;
        Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Play.png")));
        player.stop();
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\Video\\Up2T Image.gif"));
    }//GEN-LAST:event_PlayListActionPerformed

    private void BackWardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackWardMouseClicked
        // TODO add your handling code here:
       
        song=PlayList.getSelectedIndex();
        if(song==PlayList.getItemCount()-1)song=-1;
        player.getPlayList().clear();
        player.addToPlayList(new File("C://Users//Nguyen Hong Anh//OneDrive//Desktop//App Mp3//Music//"+PlayList.getItemAt(++song)));
        PlayList.setSelectedIndex (song);
        player.play();
        Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Pause.png")));
        check=true;
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\Video\\Up2T Video.gif"));
         
    }//GEN-LAST:event_BackWardMouseClicked

    private void ForWardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForWardMouseClicked
        // TODO add your handling code here:
        
        song=PlayList.getSelectedIndex();
        if(song==0)song=PlayList.getItemCount();
        player.getPlayList().clear();
        player.addToPlayList(new File("C://Users//Nguyen Hong Anh//OneDrive//Desktop//App Mp3//Music//"+PlayList.getItemAt(--song)));
        PlayList.setSelectedIndex (song);
        player.play();
        Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Pause.png")));
        check=true;
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Nguyen Hong Anh\\OneDrive\\Desktop\\Video\\Up2T Video.gif"));
    }//GEN-LAST:event_ForWardMouseClicked

    private void RepeatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RepeatMousePressed
        // TODO add your handling code here:
        if(repeat == false){
            repeat = true;
            playerRepeat.getPlayList().clear();
            playerRepeat.addToPlayList(songFile);
            playerRepeat.setRepeat(repeat);
            playerRepeat.setShuffle(repeat);
            Repeat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/Repeat.png")));
            // songFile = openFileChooser.getSelectedFile();  
            //songFile=test;
           // player./*loop*/();
           
        }
        else if(repeat == true){
            repeat = false;
            playerRepeat.getPlayList().clear();
            player.setRepeat(repeat);
            player.setShuffle(repeat);
            Repeat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pk/No Repeat.png")));
        }
    }//GEN-LAST:event_RepeatMousePressed

    private void NameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_NameMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        
              
        
    }//GEN-LAST:event_jLabel1MouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        // TODO add your handling code here:
        int delete=PlayList.getSelectedIndex();
        JOptionPane.showMessageDialog(this, "Đã xóa ' " + PlayList.getItemAt(delete) +" ' ra khỏi danh sách phát !!!");
        PlayList.removeAllItems();
            ListPlay.remove(delete);
            for (String i: ListPlay) {
                this.PlayList.addItem(i);
            }
    }//GEN-LAST:event_deleteMouseClicked

    private void StopMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StopMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_StopMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PlayerFrame lg = new PlayerFrame();
        lg.setVisible(true);
        lg.pack();
        lg.setLocationRelativeTo(null);
        lg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Add;
    private javax.swing.JLabel BackWard;
    private javax.swing.JLabel ForWard;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel Play;
    private javax.swing.JComboBox<String> PlayList;
    private javax.swing.JLabel Repeat;
    private javax.swing.JLabel Stop;
    private javax.swing.JSlider Vol;
    private javax.swing.JLabel delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
    private void volumeControl(Double valueToPlusMinus){
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        for(Mixer.Info mixerInfo : mixers){
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            for(Line.Info lineInfo : lineInfos){
                Line line = null;
                boolean opened = true;
                try{
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    if(!opened){
                        line.open();
                    }
                    // Make a float control
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    // Get Current Volume Now
                   // float currentVolume = volControl.getValue();
                    Double volumeToCut = valueToPlusMinus;
                    float changedCalc = (float) ((double)volumeToCut);
                    volControl.setValue(changedCalc);
                    
                }catch (LineUnavailableException lineException){
                }catch (IllegalArgumentException illException){
                }finally{
                    // Close Line If it opened
                    if(line != null && !opened){
                        line.close();
                    }
                }
            } 
        }
    }
class Running extends Thread{
        
        public void run(){
            
            String line=Name.getText();
            while(true){
                line=line.charAt(line.length()-1)+line.substring(0,line.length()-1);
                Name.setText(line);
                try{
                    sleep(20);
                }catch(InterruptedException e){
                    System.out.println(e);
                }
            }
        }
    }
 
}

 /*
player list bài

*/

